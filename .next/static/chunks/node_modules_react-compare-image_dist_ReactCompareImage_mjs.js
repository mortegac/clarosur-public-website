"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_react-compare-image_dist_ReactCompareImage_mjs"],{

/***/ "./node_modules/react-compare-image/dist/ReactCompareImage.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/react-compare-image/dist/ReactCompareImage.mjs ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ge; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar X = { exports: {} }, D = {};\n/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar ne;\nfunction de() {\n  if (ne) return D;\n  ne = 1;\n  var i = Symbol.for(\"react.transitional.element\"), a = Symbol.for(\"react.fragment\");\n  function u(n, f, h) {\n    var T = null;\n    if (h !== void 0 && (T = \"\" + h), f.key !== void 0 && (T = \"\" + f.key), \"key\" in f) {\n      h = {};\n      for (var j in f)\n        j !== \"key\" && (h[j] = f[j]);\n    } else h = f;\n    return f = h.ref, {\n      $$typeof: i,\n      type: n,\n      key: T,\n      ref: f !== void 0 ? f : null,\n      props: h\n    };\n  }\n  return D.Fragment = a, D.jsx = u, D.jsxs = u, D;\n}\nvar F = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar oe;\nfunction fe() {\n  return oe || (oe = 1,  true && function() {\n    function i(e) {\n      if (e == null) return null;\n      if (typeof e == \"function\")\n        return e.$$typeof === g ? null : e.displayName || e.name || null;\n      if (typeof e == \"string\") return e;\n      switch (e) {\n        case R:\n          return \"Fragment\";\n        case H:\n          return \"Profiler\";\n        case k:\n          return \"StrictMode\";\n        case Z:\n          return \"Suspense\";\n        case U:\n          return \"SuspenseList\";\n        case Q:\n          return \"Activity\";\n      }\n      if (typeof e == \"object\")\n        switch (typeof e.tag == \"number\" && console.error(\n          \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n        ), e.$$typeof) {\n          case z:\n            return \"Portal\";\n          case l:\n            return (e.displayName || \"Context\") + \".Provider\";\n          case B:\n            return (e._context.displayName || \"Context\") + \".Consumer\";\n          case v:\n            var t = e.render;\n            return e = e.displayName, e || (e = t.displayName || t.name || \"\", e = e !== \"\" ? \"ForwardRef(\" + e + \")\" : \"ForwardRef\"), e;\n          case q:\n            return t = e.displayName || null, t !== null ? t : i(e.type) || \"Memo\";\n          case m:\n            t = e._payload, e = e._init;\n            try {\n              return i(e(t));\n            } catch {\n            }\n        }\n      return null;\n    }\n    function a(e) {\n      return \"\" + e;\n    }\n    function u(e) {\n      try {\n        a(e);\n        var t = !1;\n      } catch {\n        t = !0;\n      }\n      if (t) {\n        t = console;\n        var r = t.error, o = typeof Symbol == \"function\" && Symbol.toStringTag && e[Symbol.toStringTag] || e.constructor.name || \"Object\";\n        return r.call(\n          t,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          o\n        ), a(e);\n      }\n    }\n    function n(e) {\n      if (e === R) return \"<>\";\n      if (typeof e == \"object\" && e !== null && e.$$typeof === m)\n        return \"<...>\";\n      try {\n        var t = i(e);\n        return t ? \"<\" + t + \">\" : \"<...>\";\n      } catch {\n        return \"<...>\";\n      }\n    }\n    function f() {\n      var e = $.A;\n      return e === null ? null : e.getOwner();\n    }\n    function h() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function T(e) {\n      if (E.call(e, \"key\")) {\n        var t = Object.getOwnPropertyDescriptor(e, \"key\").get;\n        if (t && t.isReactWarning) return !1;\n      }\n      return e.key !== void 0;\n    }\n    function j(e, t) {\n      function r() {\n        w || (w = !0, console.error(\n          \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n          t\n        ));\n      }\n      r.isReactWarning = !0, Object.defineProperty(e, \"key\", {\n        get: r,\n        configurable: !0\n      });\n    }\n    function W() {\n      var e = i(this.type);\n      return I[e] || (I[e] = !0, console.error(\n        \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n      )), e = this.props.ref, e !== void 0 ? e : null;\n    }\n    function G(e, t, r, o, b, x, P, N) {\n      return r = x.ref, e = {\n        $$typeof: C,\n        type: e,\n        key: t,\n        props: x,\n        _owner: b\n      }, (r !== void 0 ? r : null) !== null ? Object.defineProperty(e, \"ref\", {\n        enumerable: !1,\n        get: W\n      }) : Object.defineProperty(e, \"ref\", { enumerable: !1, value: null }), e._store = {}, Object.defineProperty(e._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      }), Object.defineProperty(e, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      }), Object.defineProperty(e, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: P\n      }), Object.defineProperty(e, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: N\n      }), Object.freeze && (Object.freeze(e.props), Object.freeze(e)), e;\n    }\n    function O(e, t, r, o, b, x, P, N) {\n      var s = t.children;\n      if (s !== void 0)\n        if (o)\n          if (A(s)) {\n            for (o = 0; o < s.length; o++)\n              M(s[o]);\n            Object.freeze && Object.freeze(s);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else M(s);\n      if (E.call(t, \"key\")) {\n        s = i(e);\n        var y = Object.keys(t).filter(function(V) {\n          return V !== \"key\";\n        });\n        o = 0 < y.length ? \"{key: someKey, \" + y.join(\": ..., \") + \": ...}\" : \"{key: someKey}\", p[s + o] || (y = 0 < y.length ? \"{\" + y.join(\": ..., \") + \": ...}\" : \"{}\", console.error(\n          `A props object containing a \"key\" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />`,\n          o,\n          s,\n          y,\n          s\n        ), p[s + o] = !0);\n      }\n      if (s = null, r !== void 0 && (u(r), s = \"\" + r), T(t) && (u(t.key), s = \"\" + t.key), \"key\" in t) {\n        r = {};\n        for (var J in t)\n          J !== \"key\" && (r[J] = t[J]);\n      } else r = t;\n      return s && j(\n        r,\n        typeof e == \"function\" ? e.displayName || e.name || \"Unknown\" : e\n      ), G(\n        e,\n        s,\n        x,\n        b,\n        f(),\n        r,\n        P,\n        N\n      );\n    }\n    function M(e) {\n      typeof e == \"object\" && e !== null && e.$$typeof === C && e._store && (e._store.validated = 1);\n    }\n    var L = react__WEBPACK_IMPORTED_MODULE_0__, C = Symbol.for(\"react.transitional.element\"), z = Symbol.for(\"react.portal\"), R = Symbol.for(\"react.fragment\"), k = Symbol.for(\"react.strict_mode\"), H = Symbol.for(\"react.profiler\"), B = Symbol.for(\"react.consumer\"), l = Symbol.for(\"react.context\"), v = Symbol.for(\"react.forward_ref\"), Z = Symbol.for(\"react.suspense\"), U = Symbol.for(\"react.suspense_list\"), q = Symbol.for(\"react.memo\"), m = Symbol.for(\"react.lazy\"), Q = Symbol.for(\"react.activity\"), g = Symbol.for(\"react.client.reference\"), $ = L.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, E = Object.prototype.hasOwnProperty, A = Array.isArray, _ = console.createTask ? console.createTask : function() {\n      return null;\n    };\n    L = {\n      react_stack_bottom_frame: function(e) {\n        return e();\n      }\n    };\n    var w, I = {}, S = L.react_stack_bottom_frame.bind(\n      L,\n      h\n    )(), c = _(n(h)), p = {};\n    F.Fragment = R, F.jsx = function(e, t, r, o, b) {\n      var x = 1e4 > $.recentlyCreatedOwnerStacks++;\n      return O(\n        e,\n        t,\n        r,\n        !1,\n        o,\n        b,\n        x ? Error(\"react-stack-top-frame\") : S,\n        x ? _(n(e)) : c\n      );\n    }, F.jsxs = function(e, t, r, o, b) {\n      var x = 1e4 > $.recentlyCreatedOwnerStacks++;\n      return O(\n        e,\n        t,\n        r,\n        !0,\n        o,\n        b,\n        x ? Error(\"react-stack-top-frame\") : S,\n        x ? _(n(e)) : c\n      );\n    };\n  }()), F;\n}\nvar ie;\nfunction pe() {\n  return ie || (ie = 1,  false ? 0 : X.exports = fe()), X.exports;\n}\nvar d = pe(), me = \"development\" === \"production\", te = \"Invariant failed\";\nfunction se(i, a) {\n  if (!i) {\n    if (me)\n      throw new Error(te);\n    var u = typeof a == \"function\" ? a() : a, n = u ? \"\".concat(te, \": \").concat(u) : te;\n    throw new Error(n);\n  }\n}\nfunction xe(i) {\n  const a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    if (!a.current)\n      return;\n    const u = new ResizeObserver((n) => {\n      se(n[0], \"ResizeObserver should have at least one entry\"), i(n[0].contentRect.width);\n    });\n    return u.observe(a.current), i(a.current.getBoundingClientRect().width), () => {\n      u.disconnect();\n    };\n  }, [i]), a;\n}\nfunction he(i, a, u, n) {\n  const f = n === \"taller\" ? Math.max(a, u) : Math.min(a, u);\n  return i * f;\n}\nfunction ae(i) {\n  return i.naturalHeight / i.naturalWidth;\n}\nconst ge = (i) => {\n  const {\n    aspectRatio: a = \"taller\",\n    handle: u = null,\n    handleSize: n = 40,\n    hover: f = !1,\n    leftImage: h,\n    leftImageAlt: T = \"\",\n    leftImageCss: j = {},\n    leftImageLabel: W = null,\n    onSliderPositionChange: G,\n    rightImage: O,\n    rightImageAlt: M = \"\",\n    rightImageCss: L = {},\n    rightImageLabel: C = null,\n    skeleton: z = null,\n    sliderLineColor: R = \"#ffffff\",\n    sliderLineWidth: k = 2,\n    sliderPositionPercentage: H = 0.5,\n    vertical: B = !1\n  } = i, l = !B, [v, Z] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    H\n  ), [U, q] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [m, Q] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0), [g, $] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0), E = xe((p) => Q(p)), A = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), _ = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), [w, I] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), S = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    _.current?.complete && A.current?.complete && I(!0);\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (S(), () => {\n    I(!1);\n  }), [h, O, S]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!(_.current && A.current) || m === 0 || !w)\n      return;\n    const p = he(\n      m,\n      ae(_.current),\n      ae(A.current),\n      a\n    );\n    $(p);\n  }, [m, w, a]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!E.current || !w)\n      return;\n    const p = (o) => {\n      if (!E.current)\n        return;\n      const b = E.current.getBoundingClientRect();\n      let x, P;\n      if (o instanceof TouchEvent) {\n        const K = o.touches[0];\n        se(K), x = K.clientX, P = K.clientY;\n      } else\n        x = o.clientX, P = o.clientY;\n      const N = l ? x - b.left : P - b.top, s = k / 2, y = l ? m - s : g - s, V = Math.min(\n        Math.max(N, s),\n        y\n      ) / (l ? m : g);\n      Z(V), G?.(V);\n    }, e = (o) => {\n      q(!0), \"touches\" in o || o.preventDefault(), p(o), window.addEventListener(\"mousemove\", p), window.addEventListener(\"touchmove\", p);\n    }, t = () => {\n      q(!1), window.removeEventListener(\"mousemove\", p), window.removeEventListener(\"touchmove\", p);\n    }, r = E.current;\n    return r.addEventListener(\"touchstart\", e), window.addEventListener(\"touchend\", t), f ? (r.addEventListener(\"mousemove\", p), r.addEventListener(\"mouseleave\", t)) : (r.addEventListener(\"mousedown\", e), window.addEventListener(\"mouseup\", t)), () => {\n      r.removeEventListener(\"touchstart\", e), window.removeEventListener(\"touchend\", t), r.removeEventListener(\"mousemove\", p), r.removeEventListener(\"mouseleave\", t), r.removeEventListener(\"mousedown\", e), window.removeEventListener(\"mouseup\", t), window.removeEventListener(\"mousemove\", p), window.removeEventListener(\"touchmove\", p);\n    };\n  }, [\n    w,\n    a,\n    g,\n    m,\n    l,\n    f,\n    k,\n    E\n    // onSliderPositionChange, // may cause infinite loop\n  ]);\n  const c = {\n    container: {\n      boxSizing: \"border-box\",\n      position: \"relative\",\n      width: \"100%\",\n      height: `${g}px`,\n      overflow: \"hidden\"\n    },\n    rightImage: {\n      clipPath: l ? `inset(0px 0px 0px ${m * v}px)` : `inset(${g * v}px 0px 0px 0px)`,\n      display: \"block\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      position: \"absolute\",\n      width: \"100%\",\n      ...L\n    },\n    leftImage: {\n      clipPath: l ? `inset(0px ${m * (1 - v)}px 0px 0px)` : `inset(0px 0px ${g * (1 - v)}px 0px)`,\n      display: \"block\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      position: \"absolute\",\n      width: \"100%\",\n      ...j\n    },\n    slider: {\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      position: \"absolute\",\n      ...l ? {\n        cursor: \"ew-resize\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        left: `${m * v - n / 2}px`,\n        top: 0,\n        width: `${n}px`\n      } : {\n        cursor: \"ns-resize\",\n        flexDirection: \"row\",\n        height: `${n}px`,\n        left: 0,\n        top: `${g * v - n / 2}px`,\n        width: \"100%\"\n      }\n    },\n    line: {\n      background: R,\n      boxShadow: \"0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)\",\n      flex: \"0 1 auto\",\n      height: l ? \"100%\" : `${k}px`,\n      width: l ? `${k}px` : \"100%\"\n    },\n    handleCustom: {\n      alignItems: \"center\",\n      boxSizing: \"border-box\",\n      display: \"flex\",\n      flex: \"1 0 auto\",\n      height: \"auto\",\n      justifyContent: \"center\",\n      width: \"auto\"\n    },\n    handleDefault: {\n      alignItems: \"center\",\n      border: `${k}px solid ${R}`,\n      borderRadius: \"100%\",\n      boxShadow: \"0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)\",\n      boxSizing: \"border-box\",\n      display: \"flex\",\n      flex: \"1 0 auto\",\n      height: `${n}px`,\n      justifyContent: \"center\",\n      width: `${n}px`,\n      transform: l ? \"none\" : \"rotate(90deg)\"\n    },\n    leftArrow: {\n      border: `inset ${n * 0.15}px rgba(0,0,0,0)`,\n      borderRight: `${n * 0.15}px solid ${R}`,\n      height: \"0px\",\n      marginLeft: `-${n * 0.25}px`,\n      // for IE11\n      marginRight: `${n * 0.25}px`,\n      width: \"0px\"\n    },\n    rightArrow: {\n      border: `inset ${n * 0.15}px rgba(0,0,0,0)`,\n      borderLeft: `${n * 0.15}px solid ${R}`,\n      height: \"0px\",\n      marginRight: `-${n * 0.25}px`,\n      // for IE11\n      width: \"0px\"\n    },\n    leftLabel: {\n      background: \"rgba(0, 0, 0, 0.5)\",\n      color: \"white\",\n      left: l ? \"5%\" : \"50%\",\n      opacity: U ? 0 : 1,\n      padding: \"10px 20px\",\n      position: \"absolute\",\n      top: l ? \"50%\" : \"3%\",\n      transform: l ? \"translate(0,-50%)\" : \"translate(-50%, 0)\",\n      transition: \"opacity 0.1s ease-out\"\n    },\n    rightLabel: {\n      background: \"rgba(0, 0, 0, 0.5)\",\n      color: \"white\",\n      opacity: U ? 0 : 1,\n      padding: \"10px 20px\",\n      position: \"absolute\",\n      ...l ? {\n        right: \"5%\",\n        top: \"50%\",\n        transform: \"translate(0,-50%)\"\n      } : {\n        left: \"50%\",\n        bottom: \"3%\",\n        transform: \"translate(-50%, 0)\"\n      },\n      transition: \"opacity 0.1s ease-out\"\n    },\n    leftLabelContainer: {\n      clipPath: l ? `inset(0px ${m * (1 - v)}px 0px 0px)` : `inset(0px 0px ${g * (1 - v)}px 0px)`,\n      height: \"100%\",\n      position: \"absolute\",\n      width: \"100%\"\n    },\n    rightLabelContainer: {\n      clipPath: l ? `inset(0px 0px 0px ${m * v}px)` : `inset(${g * v}px 0px 0px 0px)`,\n      height: \"100%\",\n      position: \"absolute\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */ d.jsxs(d.Fragment, { children: [\n    z && !w && /* @__PURE__ */ d.jsx(\"div\", { style: { ...c.container }, children: z }),\n    /* @__PURE__ */ d.jsxs(\n      \"div\",\n      {\n        style: {\n          ...c.container,\n          display: w ? \"block\" : \"none\"\n        },\n        ref: E,\n        \"data-testid\": \"container\",\n        children: [\n          /* @__PURE__ */ d.jsx(\n            \"img\",\n            {\n              onLoad: () => S(),\n              alt: M,\n              \"data-testid\": \"right-image\",\n              ref: A,\n              src: O,\n              style: c.rightImage\n            }\n          ),\n          /* @__PURE__ */ d.jsx(\n            \"img\",\n            {\n              onLoad: () => S(),\n              alt: T,\n              \"data-testid\": \"left-image\",\n              ref: _,\n              src: h,\n              style: c.leftImage\n            }\n          ),\n          /* @__PURE__ */ d.jsxs(\"div\", { style: c.slider, children: [\n            /* @__PURE__ */ d.jsx(\"div\", { style: c.line }),\n            u ? /* @__PURE__ */ d.jsx(\"div\", { style: c.handleCustom, children: u }) : /* @__PURE__ */ d.jsxs(\"div\", { style: c.handleDefault, children: [\n              /* @__PURE__ */ d.jsx(\"div\", { style: c.leftArrow }),\n              /* @__PURE__ */ d.jsx(\"div\", { style: c.rightArrow })\n            ] }),\n            /* @__PURE__ */ d.jsx(\"div\", { style: c.line })\n          ] }),\n          W && /* @__PURE__ */ d.jsx(\"div\", { style: c.leftLabelContainer, children: /* @__PURE__ */ d.jsx(\"div\", { style: c.leftLabel, children: W }) }),\n          C && /* @__PURE__ */ d.jsx(\"div\", { style: c.rightLabelContainer, children: /* @__PURE__ */ d.jsx(\"div\", { style: c.rightLabel, children: C }) })\n        ]\n      }\n    )\n  ] });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-compare-image/dist/ReactCompareImage.mjs\n"));

/***/ })

}]);